SODA TEST DOCUMENTATION
========================

The program takes parameters from the CLI. Then, it simulates soda buying and outputs the corresponding
results as output to stdout.

USER INTERFACE TESTING
  There is no user interface to be tested, so the testing focuses solely on
  program output based on different inputs.

ALGORITHM TESTING
  TEST 1: INVALID USAGE 
    DESCRIPTION
    This test is to check that our CLI gracefully fails on invalid input.

    TESTING
    ```
    ./soda incorrect_file
		./soda soda.config -1
    ```

    OUTPUT
    ```
		Error: could not open input file "s.x"
		Usage: ./soda [ config-file [ random-seed (> 0) ] ]

    ```

    ANALYSIS
    The output is correct as per specification, since stderr displays an appropriate usage.

	TEST 2: BASIC USAGE # 1
		DESCRIPTION
		This test is to check that our program has the correct behaviour in the general case.

		TESTING
		```
		./soda
		```

		OUTPUT
		```
		Parent  Gropoff  WATOff  Names  Truck  Plant  Stud0  Stud1  Mach0  Mach1  Mach2  Cour0
		*******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******
		S  S  S  S    S            S
		D0,2    C0,5  R0  S    S0,8    S2
		D0,2    C1,5  R1    G4    S2,6    S2
		D0,3    W  R2              S2  t0,5
				W                  T0,5
		D1,1      N0,0      V0          t1,5
		D0,3      N1,1        V1
		D1,1      N0,1  P4  P  V1    r
		D0,1  D2    N0,2  d0,4    V2    R
						U0,16
		D0,3      N0,0  D0,0  G10  V0
		D0,2      N0,1      V1
		D0,2      N0,2      V2
		D1,3      N1,2        V2        T1,5
			D2    N0,0      V0
		D1,3  F    N1,0        V0  B2,1
						P10  P    G2,0    r
		D0,1      N0,1  d1,10    V1      R
						U1,10
		D1,2        D1,0  G18  G0,0      B0,1
		D1,1              B2,3  B2,0
		D1,3        P18  P          r
		D0,2        d2,18    B0,3      B0,0  R
						U2,2
		D1,2      N0,2  D2,0    V2        B0,4
		D0,1      N1,1    G14  B0,1  V1    B2,2
		D1,2              B2,1
		D1,1
		D0,1        P14  P    A2,1  r
		D1,1        d0,14    A0,1    R
						U0,5
		D1,1        D0,1          r
		D0,2        d1,1  G14        R
						U1,14
		D1,2        D1,0      A2,1
		D0,1        P14  P          r
		D1,1        d2,14            R
						D2,10        r
		D1,3    T0,7    d0,10  G8      R
						D0,5          r
		D0,2    W    d1,5              t0,7
						U1,9          R    T0,7
		D1,3        D1,0  P  B0,6        B0,4
		D1,1    T1,7    P8            r
				W    d2,8              t1,7
		D0,2        U2,1            R  T1,7
						D2,8        r
						d0,8      B2,6    B2,0
		D1,1        D0,8  G9  B0,4  F  R  r  B0,3
		D1,3        d1,8          R
						U1,6
		D0,3        D1,4    B0,2        B0,2
		D1,1
		D1,2        P9  P          r
		D0,2        d2,9            R
						D2,6        r
		D1,3        d0,6  G8  B0,0        B0,4
						D0,6    F    R  r
		D0,1        d1,6          R
						U1,5
		D0,2        D1,5
		D1,3
		D1,3
		D0,2        P8  P          r
		D1,1        d2,8            R
						D2,7        r
		D0,3        d0,7        R
						D0,7          r
		D1,2        d1,7          R
						U1,4
		D1,3        D1,6
		D0,3        F  F
		D0,2                F
		D1,1                  F
		D0,2                    F
		D0,2      F
		D1,2                      F
		D0,2    F
		D1,1
		F
		***********************
		```

		ANALYSIS
		The program follows the specifications. All the students got their number of sodas before they finished.
		Every task is started and finished. The truck is started after the bottling plant, as expected. The configuration
		is adhered to.

	TEST 3: BASIC USAGE # 2
		DESCRIPTION
		This test is to check that our program has the correct behaviour in the case that a courier loses a watcard.

		TESTING
		```
		./soda soda.config 5
		```

		OUTPUT
		```
		Parent  Gropoff  WATOff  Names  Truck  Plant  Stud0  Stud1  Mach0  Mach1  Mach2  Cour0
		*******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******
		S  S  S  S    S            S
		D0,2    C0,5  R0  S    S1,4    S2
		D0,3    C1,5  R1    G9    S0,3    S2
				W  R2              S2  t0,5
													T0,5
		D0,2    W                  L0
						P9  P      r      t1,5
		D0,1      N0,0  d0,9    V0    R
						U0,11
		D0,2      N1,1  D0,0  G9    V1
		D1,3  D2
		D0,1
		D0,2        P9  P        r
		D1,2    C0,5    d1,9    L      R
						U1,11
				W    D1,0              T1,5
													t0,5
		D1,3          G12    G0,0    B0,2    T0,5
						P12  P          r
		D1,2        d2,12            R
						U2,8
			D2      D2,0
		D1,1  F        G14  A1,5
		D1,2        P14  P  G1,0  B0,3  B1,1  B0,1
		D0,2        d0,14        r
		D1,1        U0,3        R
						D0,4          r
		D1,2        d1,4  G9  B1,3    B1,1  R
						U1,9
		D1,3        D1,0      B0,1    B0,0
		D1,3              F
		D0,2
		D0,2            B1,1    B1,0
						P9  P  F        r
		D0,1        d2,9            R
						U2,2
						D2,3        r
		D0,3        d0,3        R
						U0,3
						D0,1          r
		D1,1        d1,1          R
						U1,9
		D0,1        D1,0
		D1,3
		D0,3
		D1,3
		D1,2        F
		D0,1          F
		D0,1                F
		D1,2                  F
		D0,1                    F
		D1,3      F
		D0,2                      F
		D1,3    F
		D0,2
		F
		***********************
		```

		ANALYSIS
		The program follows the specifications. All the students got their number of sodas before they finished.
		Every task is started and finished. The truck is started after the bottling plant, as expected. The configuration
		is adhered to. Additionally, after the courier loses the watcard (L0), $5 is transferred to student 0.

	TEST 4: DIFFERENT CONFIGURATION 
		DESCRIPTION
		This test is to check that our program has the correct behaviour with a non-default configuration.
		Soda cost was changed, number of students was increased to 4, max purchases was lowered to 2, and numer
		of vending machines was increased to 3.

		TESTING
		```
		./soda soda.config2 
		```

		OUTPUT
		```
		Parent  Gropoff  WATOff  Names  Truck  Plant  Stud0  Stud1  Stud2  Stud3  Mach0  Mach1  Mach2  Cour0
		*******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******  *******
		S  S  S  S    S                S
		D2,1    C0,5  R0  S    S2,1        S3
		D3,2    C1,5  R1    G11    S1,1        S3
		D0,3    C2,5  R2          S1,2        S3
		D0,1    C3,5  N0,0      V0      S0,1
		D1,1    W  N1,1  P11  P    V1      r      t0,5
		D3,2      N2,2  d0,11        V2    R
						U0,9
		D2,3      N3,0  D0,0  G12        V0
						P12  P            r
		D3,3        d1,12              R
						U1,8
		D0,2  D3      D1,0      G1,0        B1,1
				W          F            T0,5
							G16  B2,2        B2,1      t1,5
		D2,1            F
		D0,1        P16  P              r
		D0,1        d2,16                R
						U2,4
		D0,3  D3      D2,0  G7
		D3,1                  G0,0  B0,4
		D2,1        P7  P        F  r
		D0,3        d0,7            R
						U0,6
						D0,2              r
		D1,1        d1,2  G11            R
						U1,7
		D1,2        D1,0  P
						P11                r
		D3,3  D3      d2,11                R
						D2,7            r
		D0,3        d0,7  G12      G1,0    R    B1,4
						D0,1              r
		D2,2        d1,1              R
						U1,6
		D1,3    W    D1,0                  T1,5
															t2,5
		D1,3    W                      T2,5
															t3,5
			D3                        T3,5
		D3,2  F      P12  P              r
		D1,1        d2,12                R
						D2,11            r
		D3,1        d0,11  G15      B1,2        B1,4
						D0,11        F    R  r
		D0,2        d1,11              R
						U1,2
		D3,2        D1,7
		D3,3
		D1,3
		D1,1        P15  P              r
		D3,2        d2,15                R
						D2,14            r
		D0,3        d0,14            R
						D0,14              r
		D3,1        d1,14              R
		D1,2        D1,12
		D0,3        F  F
		D1,3                    F
		D2,3                      F
		D0,3                        F
		D0,3      F
		D2,2
		D2,3    F                      F
		D3,2
		D0,1
		F
		***********************
		```

		ANALYSIS
		The program follows the specifications. All the students got their number of sodas before they finished.
		Every task is started and finished. The truck is started after the bottling plant, as expected. The configuration
		is adhered to. Additionally, the correct amount of students and vending machines are simulated. The number of
		purchases also respect the max purchases constraint.
